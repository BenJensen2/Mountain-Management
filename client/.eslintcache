[{"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/index.js":"1","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/App.js":"2","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/reportWebVitals.js":"3","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllMembers.jsx":"4","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Home.jsx":"5","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map3D.jsx":"6","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map2D.jsx":"7","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Exhibition.js":"8","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/The_Wedge.js":"9","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Runs.js":"10","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Lifts.js":"11","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Incident.jsx":"12","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/ContextMenu.jsx":"13","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/SingleSelectButtons.jsx":"14","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/MultipleSelectButtons.jsx":"15","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Feature.jsx":"16","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllFeatures.jsx":"17","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/MemberForm.jsx":"18","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/IncidentForm.jsx":"19","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/ResponderForm.jsx":"20","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/ContactForm.jsx":"21","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/StaffForm.jsx":"22","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/SkiForm.jsx":"23","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/BoardForm.jsx":"24","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/FeatureForm.jsx":"25","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/FeatureForms/NewFeatureForm.jsx":"26","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllRuns.jsx":"27","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/RunForms/NewRunForm.jsx":"28","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Run.jsx":"29"},{"size":593,"mtime":1612337746057,"results":"30","hashOfConfig":"31"},{"size":1220,"mtime":1614355445417,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610941304292,"results":"33","hashOfConfig":"31"},{"size":3729,"mtime":1614354216617,"results":"34","hashOfConfig":"31"},{"size":1428,"mtime":1614355806086,"results":"35","hashOfConfig":"31"},{"size":13963,"mtime":1613842747029,"results":"36","hashOfConfig":"31"},{"size":6097,"mtime":1613842717508,"results":"37","hashOfConfig":"31"},{"size":3667,"mtime":1613575710014,"results":"38","hashOfConfig":"31"},{"size":644,"mtime":1613576030599,"results":"39","hashOfConfig":"31"},{"size":7753,"mtime":1613799911604,"results":"40","hashOfConfig":"31"},{"size":0,"mtime":1613576710056,"results":"41","hashOfConfig":"31"},{"size":343,"mtime":1614350295315,"results":"42","hashOfConfig":"31"},{"size":2398,"mtime":1614355523554,"results":"43","hashOfConfig":"31"},{"size":1021,"mtime":1613875375775,"results":"44","hashOfConfig":"31"},{"size":1076,"mtime":1614176837220,"results":"45","hashOfConfig":"31"},{"size":339,"mtime":1614353864142,"results":"46","hashOfConfig":"31"},{"size":3720,"mtime":1614354169336,"results":"47","hashOfConfig":"31"},{"size":5600,"mtime":1613786119782,"results":"48","hashOfConfig":"31"},{"size":5307,"mtime":1614350465921,"results":"49","hashOfConfig":"31"},{"size":2786,"mtime":1614181915211,"results":"50","hashOfConfig":"31"},{"size":5060,"mtime":1614312330875,"results":"51","hashOfConfig":"31"},{"size":2765,"mtime":1614181903335,"results":"52","hashOfConfig":"31"},{"size":10839,"mtime":1614309381534,"results":"53","hashOfConfig":"31"},{"size":10733,"mtime":1614309628630,"results":"54","hashOfConfig":"31"},{"size":2330,"mtime":1614318404891,"results":"55","hashOfConfig":"31"},{"size":4159,"mtime":1614358568291,"results":"56","hashOfConfig":"31"},{"size":3150,"mtime":1614355943064,"results":"57","hashOfConfig":"31"},{"size":2363,"mtime":1614356337252,"results":"58","hashOfConfig":"31"},{"size":311,"mtime":1614355384230,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"g5fkn0",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/index.js",[],["122","123"],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/App.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/reportWebVitals.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllMembers.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Home.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map3D.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map2D.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Exhibition.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/The_Wedge.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Runs.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Lifts.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Incident.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/ContextMenu.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/SingleSelectButtons.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/MultipleSelectButtons.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Feature.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllFeatures.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/MemberForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/IncidentForm.jsx",["124"],"import React, { useState, useEffect } from 'react';\nimport './IncidentForm.css'\nimport SingleSelectButtons from '../SingleSelectButtons'\nimport MultipleSelectButtons from '../MultipleSelectButtons'\nimport ContactForm from './ContactForm'\nimport ResponderForm from './ResponderForm'\nimport StaffForm from './StaffForm'\nimport SkiForm from './SkiForm'\nimport BoardForm from './BoardForm'\n// import ManMadeFeatureForm from './ManMadeFeatureForm'\n\nconst IncidentForm = () => {\n\n  const [activityType, setActivityType] = useState(\"\")\n  const [incidentType, setIncidentType] = useState(\"\")\n  const [collisionTypes, setCollisionTypes] = useState([])\n  const [showFeatures, setShowFeatures] = useState(false)\n  let shadowColor = \"rgb(201, 10, 17)\";\n\n  useEffect(() => {\n    if (collisionTypes.includes(\"manMade\") || collisionTypes.includes(\"natural\")) {\n      setShowFeatures(true)\n    } else { setShowFeatures(false) }\n  })\n\n  const collapseBodyHandler = (e) => {\n    let currentDisplay = window.getComputedStyle(e.target.nextSibling).getPropertyValue('display')\n    if (currentDisplay === \"none\") {\n      e.target.nextSibling.style.display = \"block\";\n    } else {\n      e.target.nextSibling.style.display = \"none\";\n    }\n  }\n\n  return (\n    <div className=\"incident-form-component\">\n      <h1>\n        Incident Form\n      </h1>\n      {/* Location */}\n      <form className=\"location-form\" action=\"\">\n        {/* <Map2D /> */}\n        <div className=\"location\">\n          <div className=\"card-header\">Location</div>\n          <div className=\"card-body\">\n          </div>\n        </div>\n      </form>\n\n      <div className=\"info-cards\">\n        {/* Incident */}\n        {/* <form className=\"incident-form card\" action=\"\" onSubmit={incidentFormHandler}> */}\n        <div className=\"card\">\n          <div className=\"card-header\" onClick={collapseBodyHandler} >Incident</div>\n          <div className=\"card-body\">\n            <label htmlFor=\"activity\">Activity</label>\n            <div className=\"activity-type\">\n              <SingleSelectButtons\n                buttons={[\n                  [\"Skiing\", \"skiing\"],\n                  [\"Boarding\", \"boarding\"],\n                  [\"Snow Skating\", \"snowSkating\"],\n                  [\"Tubing\", \"tubing\"]\n                ]}\n                value={activityType}\n                setValue={setActivityType}\n                shadowColor={shadowColor}\n              />\n            </div>\n            <label htmlFor=\"\">Type of Incident</label>\n            <div className=\"incident-type\">\n              <SingleSelectButtons\n                buttons={[\n                  [\"Solo\", \"solo\"],\n                  [\"Collision\", \"collision\"]\n                ]}\n                value={incidentType}\n                setValue={setIncidentType}\n                shadowColor={shadowColor}\n              />\n            </div>\n            {incidentType === \"collision\" && <label htmlFor=\"\">Collision with :</label>}\n            {incidentType === \"collision\" &&\n              <div className=\"collision-types\">\n                <MultipleSelectButtons\n                  buttons={[\n                    [\"Guest\", \"guest\"],\n                    [\"Staff\", \"staff\"],\n                    [\"Man Made Feature\", \"manMade\"],\n                    [\"Natural Feature\", \"natural\"]\n                  ]}\n                  buttonValues={collisionTypes}\n                  setButtonValues={setCollisionTypes}\n                  shadowColor={shadowColor}\n                />\n              </div>\n            }\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-header\" onClick={collapseBodyHandler}>Personnel</div>\n          <div className=\"card-body\">\n\n            <ContactForm\n              title=\"Guest Info\"\n              contactType=\"guest\"\n            />\n\n            {collisionTypes.includes(\"guest\") &&\n              <ContactForm\n                title=\"Second Party\"\n                contactType=\"guest\"\n              />\n            }\n            {collisionTypes.includes(\"staff\") &&\n              <StaffForm />\n            }\n            <ResponderForm />\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-header\" onClick={collapseBodyHandler}>Gear</div>\n          <div className=\"card-body\">\n            {activityType === \"skiing\" &&\n              <SkiForm />\n            }\n            {activityType === \"boarding\" &&\n              <BoardForm/>\n            }\n            {activityType === \"snowSkating\" &&\n              <ul>\n                <li>Board</li>\n                <li>Leash?</li>\n              </ul>\n            }\n            {activityType === \"tubing\" &&\n              <ul>\n                <li>Tube Hill</li>\n                <li>Guardian</li>\n              </ul>\n            }\n          </div>\n        </div>\n        {showFeatures &&\n          <div className=\"card\">\n            <div className=\"card-header\" onClick={collapseBodyHandler}>Features</div>\n            <div className=\"card-body\">\n              {/* {collisionTypes.includes(\"manMade\") &&\n                <ManMadeFeatureForm/>\n              } */}\n              {collisionTypes.includes(\"natural\") &&\n                <div>Natural Feature</div>\n              }\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default IncidentForm","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/ResponderForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/ContactForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/StaffForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/SkiForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/BoardForm.jsx",[],["125","126"],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/IncidentForms/FeatureForm.jsx",["127","128"],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/FeatureForms/NewFeatureForm.jsx",["129","130","131","132"],"import React, { useState, useEffect } from 'react';\nimport './NewFeatureForm.css'\nimport axios from 'axios';\n\nconst FeatureForm = (props) => {\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [runs, setRuns] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [currentRun, setCurrentRun] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n\n  useEffect(() => {\n    getRuns()\n  }, [])\n\n  // Sorts runsList Last_Name from a to z\n  const sorted = (runsList) => {\n    return runsList.sort((a, b) => a.Name.localeCompare(b.Name))\n  }\n\n  // Get runs through all Runs api\n  const getRuns = () => {\n    axios.get(\"http://localhost:8000/api/allRuns\")\n      .then(res => {\n        setRuns(sorted(res.data))\n        setLoaded(true)\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(\"We have an error\", err)\n        // console.log(\"This is the error\", err.message)\n        if (err.message === \"Network Error\") {\n          console.log(\"The database is probably not connected\")\n        }\n      })\n  }\n\n  // On form submit, create a new feature\n  const formHandler = (e) => {\n\n\n\n\n    e.preventDefault()\n    let newFeature = {\n      Name: name,\n      Type: type,\n      Run: currentRun,\n      Location: location,\n      Difficulty: difficulty,\n    }\n    console.log(\"Creating a new feature!\")\n    axios.post(\"http://localhost:8000/api/feature/new\", newFeature)\n      .then(res => {\n        console.log(res.data)\n        window.location.reload()\n      })\n      .catch(err => {\n        console.log(\"We've got errors\")\n      })\n  }\n\n  return (\n    <div>\n      <form className=\"feature-form\" onSubmit={formHandler}>\n        <ul>\n          <li>\n            <label>\n              Name\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n            </label>\n          </li>\n          <li>\n            <label>\n              Type\n              <select name=\"\" value={type} onChange={e => setType(e.target.value)}>\n                <option value=\"roller\">Roller</option>\n                <option value=\"kicker\">Kicker</option>\n                <option value=\"jump\">Jump</option>\n                <option value=\"wall\">Wall</option>\n                <option value=\"box\">Box</option>\n                <option value=\"tunnel\">Tunnel</option>\n                <option value=\"rail\">Rail</option>\n                <option value=\"lollipop\">Lollipop</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </label>\n          </li>\n          <li>\n            <label>\n              Runs\n              <ul>\n                {/* {runs.map((run) => {\n                  <li>{run.Name}</li>\n                })} */}\n              </ul>\n            </label>\n          </li>\n          <li>\n            <label>\n              Run\n            <input type=\"text\" />\n              {/* {loaded &&\n                <select value={currentRun} onChange={e => setCurrentRun(e.target.value)} >\n                  {runs.map((run) => {\n                    <option key={run._id} value={run.Name} >{run.Name}</option>\n                  })}\n                </select>\n              } */}\n            </label>\n          </li>\n          <li>\n            <label>\n              Location\n            <input type=\"text\" value={location} onChange={e => setLocation(e.target.value)} />\n            </label>\n          </li>\n          <li>\n            <label>\n              Difficulty\n              <select name=\"\" value={difficulty} onChange={e => setDifficulty(e.target.value)}>\n                <option value=\"yellow\">Learning (Yellow)</option>\n                <option value=\"green\">Easy (Green)</option>\n                <option value=\"blue\">Moderate (Blue)</option>\n                <option value=\"black\">Difficult (Black)</option>\n                <option value=\"doubleBlack\">Extremely Difficult (DoubleBlack)</option>\n              </select>\n            </label>\n          </li>\n        </ul>\n        <input className=\"submit-button\" type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default FeatureForm;","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllRuns.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/RunForms/NewRunForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Run.jsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":20,"column":3,"nodeType":"139","endLine":20,"endColumn":12,"suggestions":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":10,"nodeType":"139","messageId":"145","endLine":7,"endColumn":17},{"ruleId":"143","severity":1,"message":"146","line":8,"column":10,"nodeType":"139","messageId":"145","endLine":8,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":9,"column":10,"nodeType":"139","messageId":"145","endLine":9,"endColumn":14},{"ruleId":"143","severity":1,"message":"146","line":10,"column":10,"nodeType":"139","messageId":"145","endLine":10,"endColumn":16},{"ruleId":"143","severity":1,"message":"148","line":11,"column":22,"nodeType":"139","messageId":"145","endLine":11,"endColumn":35},{"ruleId":"137","severity":1,"message":"149","line":17,"column":6,"nodeType":"150","endLine":17,"endColumn":8,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setShowFeatures'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [collisionTypes] as a second argument to the useEffect Hook.","Identifier",["154"],["152"],["153"],"no-unused-vars","'fetures' is assigned a value but never used.","unusedVar","'loaded' is assigned a value but never used.","'runs' is assigned a value but never used.","'setCurrentRun' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRuns'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Add dependencies array: [collisionTypes]",{"range":"160","text":"161"},"Update the dependencies array to be: [getRuns]",{"range":"162","text":"163"},[915,915],", [collisionTypes]",[503,505],"[getRuns]"]