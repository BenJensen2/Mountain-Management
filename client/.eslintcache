[{"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/index.js":"1","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/App.js":"2","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/reportWebVitals.js":"3","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllMembers.jsx":"4","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Home.jsx":"5","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map3D.jsx":"6","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map2D.jsx":"7","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Exhibition.js":"8","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/The_Wedge.js":"9","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Runs.js":"10","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Lifts.js":"11","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Incident.jsx":"12","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/ContextMenu.jsx":"13","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/IncidentForm.jsx":"14","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/MemberForm.jsx":"15","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/SingleSelectButtons.jsx":"16","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/MultipleSelectButtons.jsx":"17","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/ContactForm.jsx":"18","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/ResponderForm.jsx":"19","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/StaffForm.jsx":"20"},{"size":593,"mtime":1612337746057,"results":"21","hashOfConfig":"22"},{"size":781,"mtime":1613689337193,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610941304292,"results":"24","hashOfConfig":"22"},{"size":3681,"mtime":1613768849245,"results":"25","hashOfConfig":"22"},{"size":2139,"mtime":1614260038716,"results":"26","hashOfConfig":"22"},{"size":13963,"mtime":1613842747029,"results":"27","hashOfConfig":"22"},{"size":6097,"mtime":1613842717508,"results":"28","hashOfConfig":"22"},{"size":3667,"mtime":1613575710014,"results":"29","hashOfConfig":"22"},{"size":644,"mtime":1613576030599,"results":"30","hashOfConfig":"22"},{"size":7753,"mtime":1613799911604,"results":"31","hashOfConfig":"22"},{"size":0,"mtime":1613576710056,"results":"32","hashOfConfig":"22"},{"size":332,"mtime":1614005383105,"results":"33","hashOfConfig":"22"},{"size":1699,"mtime":1613799869556,"results":"34","hashOfConfig":"22"},{"size":5397,"mtime":1614259703515,"results":"35","hashOfConfig":"22"},{"size":5600,"mtime":1613786119782,"results":"36","hashOfConfig":"22"},{"size":1021,"mtime":1613875375775,"results":"37","hashOfConfig":"22"},{"size":1076,"mtime":1614176837220,"results":"38","hashOfConfig":"22"},{"size":5251,"mtime":1614181468794,"results":"39","hashOfConfig":"22"},{"size":2786,"mtime":1614181915211,"results":"40","hashOfConfig":"22"},{"size":2765,"mtime":1614181903335,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"g5fkn0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/index.js",[],["84","85"],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/App.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/reportWebVitals.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/AllMembers.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Home.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map3D.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Map2D.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Exhibition.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/The_Wedge.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Runs.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/data/Lifts.js",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/views/Incident.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/ContextMenu.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/IncidentForm.jsx",["86"],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/MemberForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/SingleSelectButtons.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/MultipleSelectButtons.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/ContactForm.jsx",["87"],"import React, { useState, useEffect } from 'react';\nimport './ContactForm.css'\nimport axios from 'axios';\n\nconst ContactForm = ({ title, contactType }) => {\n\n  const [ticketNumber, setTicketNumber] = useState(\"\")\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  // const [gender, setGender] = useState(\"\");\n  // const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  // const [needsCorrectiveLenses, setNeedsCorrectiveLenses] = useState(\"\");\n  // const [wearingCorrectiveLenses, setWearingCorrectiveLenses] = useState(\"\");\n\n  useEffect(() => {\n  })\n\n  // On form submit, create a new member\n  const formHandler = (e) => {\n    e.preventDefault()\n    let newMember = {\n      First_Name: firstName,\n      Last_Name: lastName,\n      Email_Address: email,\n      Phone_Number: phoneNumber,\n    }\n    console.log(\"Creating a new member!\")\n    axios.post(\"http://localhost:8000/api/member/new\", newMember)\n      .then(res => {\n        console.log(res.data)\n        window.location.reload()\n      })\n      // ,then()\n      .catch(err => {\n        console.log(\"We've got errors\")\n        // console.log(\"Error\",\n        // err.response.data.errors)\n        // console.log(\"Error\",\n        // err.response.data.errors.name.properties.message)\n        // setErrors(err.response.data.errors.name.properties.message)\n      })\n\n    // Axios post to new member\n\n  }\n\n  const collapseBodyHandler = (e) => {\n    let currentDisplay = window.getComputedStyle(e.target.nextSibling).getPropertyValue('display')\n    if (currentDisplay == \"none\") {\n      e.target.nextSibling.style.display = \"block\";\n    } else {\n      e.target.nextSibling.style.display = \"none\";\n    }\n  }\n\n\n  return (\n    <div className=\"info\" onSubmit={formHandler}>\n      <div className=\"info-header\" onClick={collapseBodyHandler}>{title}</div>\n      <div className=\"info-body\">\n        <div className=\"top-item text-input\">\n          <label>\n            Ticket #\n            <input type=\"text\" value={ticketNumber} onChange={e => setTicketNumber(e.target.value)} />\n          </label>\n        </div>\n        <div className=\"inputs\">\n          <div className=\"column-1\">\n            <div className=\"form-item text-input\">\n              <label>\n                First\n                <input type=\"text\" value={firstName} onChange={e => setFirstName(e.target.value)} />\n              </label>\n            </div>\n            <div className=\"form-item text-input\">\n              <label>\n                Last\n                <input type=\"text\" value={lastName} onChange={e => setLastName(e.target.value)} />\n              </label>\n            </div>\n            <div className=\"form-item text-input\">\n              <label>\n                Phone\n                <input type=\"tel\" value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)} />\n              </label>\n            </div>\n            <div className=\"form-item text-input\">\n              <label>\n                Email\n                <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} />\n              </label>\n            </div>\n          </div>\n          <div className=\"column-2\">\n            <div className=\"form-item text-input\">\n              <label>\n                Address\n                <input type=\"text\" value={address} onChange={e => setAddress(e.target.value)} />\n              </label>\n            </div>\n            <div className=\"city-state\">\n              <div className=\"form-item text-input\" id=\"contact-city\">\n                <label>\n                  City\n                <input type=\"text\" value={city} onChange={e => setCity(e.target.value)} />\n                </label>\n              </div>\n              <div className=\"form-item text-input\" id=\"contact-state\">\n                <label>\n                  State\n                <input type=\"text\" value={state} onChange={e => setState(e.target.value)} />\n                </label>\n              </div>\n            </div>\n            <div className=\"country-zip\">\n              <div className=\"form-item text-input\" id=\"contact-country\">\n                <label>\n                  Country\n                <input type=\"text\" value={country} onChange={e => setCountry(e.target.value)} />\n                </label>\n              </div>\n              <div className=\"form-item text-input\" id=\"contact-zip\">\n                <label>\n                  Zip\n                <input type=\"text\" value={zip} onChange={e => setZip(e.target.value)} />\n                </label>\n              </div>\n            </div>\n            <div className=\"form-item text-input\">\n              <label>\n                Occupation\n                <input type=\"text\" value={occupation} onChange={e => setOccupation(e.target.value)} />\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactForm;","/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/ResponderForm.jsx",[],"/Users/ben/LocalDocuments/Coding/Code/Projects/BBSP/client/src/Components/Forms/StaffForm.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":3,"nodeType":"94","endLine":17,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":57,"column":24,"nodeType":"98","messageId":"99","endLine":57,"endColumn":26},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setShowFeatures'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [collisionTypes] as a second argument to the useEffect Hook.","Identifier",["102"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Add dependencies array: [collisionTypes]",{"range":"105","text":"106"},[790,790],", [collisionTypes]"]